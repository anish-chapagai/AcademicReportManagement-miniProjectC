#include <stdio.h>
#include <conio.h>
//#include <stdlib.h>
#include <string.h>

#include <windows.h> //FOR COLORS

//COLOR_DEFINITIONS
#define green "\x1b[32m"
#define red "\x1b[31m"
#define reset "\x1b[0m"
#define yellow "\x1b[33m"
void add(struct person *);
void show(struct person *);
void edit(struct person *);
void del(struct person *);
void tabulate(struct person *);
int menu();

//STRUCTURE DECLARATION AND DEFINITION
struct person{
	char name[20];
	int roll;
	char div[6];
	char depart[5];
	int marks[6];
	float percent;
	char sub[6][20];
}p[20];

//MAIN_FUNCTION_START
main(){
	//struct person per ={.name="PHYSICS","MATHEMATICS","DRAWING","BASIC ELECTRICAL","C PROGRAMMING","APPLIED MECHANICS"}; 
	start:
	switch(menu()){
		case 1:
			add(p);
			Sleep(1000);
			break;
		case 2:
			//edit(p);
			break;
		case 3:
			//del(p);
			break;
		case 4:
			show(p);
			getch();
			//because of getch, the character is taken by the program that
			//is handeled as error and asks for valid option
			//to remove that unintentional character fflush will remove 
			//the input taken by getch from entering into the scan function
			fflush(stdin);
			break;
		case 5:
			tabulate(p);
			getch();
			break;
		case 6:
			system("cls");
			printf("\n\n<---------------Thank you for using the program---------->\n\n");
			exit(0);
			break;
		default:
			break;
	}
	goto start;
}
void add(struct person *per){
	system("cls");
	int i,j=0;
	float perc=0;
	for (i=0;per[i].name[0]!='\0';i++){
		
	}
	
	printf("Enter name: ");
	scanf("%s",per[i].name);
	printf("\nEnter department: ");
	scanf("%s",per[i].depart);
	printf("\nEnter Roll Number: ");
	scanf("%d",&per[i].roll);
	printf("\nEnter marks in:\n");
		printf("\nPhysics: ");
		scanf("%d",&per[i].marks[j]);
		j++;
		printf("\nApplied Mechanics: ");
		scanf("%d",&per[i].marks[j]);
		j++;
		printf("\nDrawing: ");
		scanf("%d",&per[i].marks[j]);
		j++;
		printf("\nC Programming: ");
		scanf("%d",&per[i].marks[j]);
		j++;
		printf("\nMathematics: ");
		scanf("%d",&per[i].marks[j]);
		j++;
		printf("\nBasic Electrical: ");
		scanf("%d",&per[i].marks[j]);
		system("cls");
		//PERCENT CALCULATION
		for (int j=0;j<6;j++){
			perc += per[i].marks[j];
		}
		per[i].percent = perc/6;
		//DIVISION CALCULATION
		j=perc/60;
		switch(j){
			case (9):
				strcpy(per[i].div,"DIST");
				break;
			case (8):
				strcpy(per[i].div,"FIRST");
				break;
			case (7):
				strcpy(per[i].div,"SECOND");
				break;
			case (6):
				strcpy(per[i].div,"THIRD");
				break;
			case (5):
				strcpy(per[i].div,"FORTH");
				break;
			case (4):
				strcpy(per[i].div,"FIFTH");
				break;
			default:
				strcpy(per[i].div,"FAILED");
				break;
		}
		printf(green"\n\n\t\t\t\tProfile Added Successfully"reset);
		fflush(stdin);
}
int menu(){
	int i;
	char dec[20];
	while(i==0){
		system("cls");
		printf(red" \t-----------------------------------------------------------\n");
		printf("\t|\t\t    WRC RESULT SHEET                       |\n");
		printf("\t-----------------------------------------------------------\n"reset);
		printf(green"\t|   1) ADD NEW RECORD\t        |   2)EDIT EXISTING RECORD |\n");
		printf("\t-----------------------------------------------------------\n");
		printf("\t|   3) DELETE EXISTING RECORD\t|   4)SHOW EXISTING RECORD |\n");
		printf("\t-----------------------------------------------------------");
		printf("\n\t|   5) TABULATE DATA            |   6)EXIT PROGRAM         |");
		printf("\n\t-----------------------------------------------------------"reset);
		printf(yellow" \n==>"reset);
		gets(dec);
		
		//atoi() is a function that converts string to integer value
		//here error handling has been done by checking if the input
		//is from within the accepted value or other input
		
		if (atoi(dec)==1||atoi(dec)==2||atoi(dec)==3||atoi(dec)==4||atoi(dec)==5||atoi(dec)==6)
			i=atoi(dec);
		else{
			system("cls");
			i=0;
			// \a will play windows default warning sound for invalid option
			printf(red"\a\n\n\n\t\t\t\tINVALID CHOICE\n\t\t\t\tENTER VALID CHOICE"reset);
			Sleep(100);
		}
	}
	return (atoi(dec));	
}
void show(struct person *per){
	system("cls");
	//checks for existence of record...if not returns to menu
	if (per[0].name[0]=='\0'){
	printf(red"\a\n\t\t\tNo Profile to show. Add profile first...\n\n\n"green"Press any key to continue--------->"reset);
	return;
	}
	int i=0,count=-1,j=0;
	float perc=0;
	char nam[20];
	printf(green "Enter the name of the student: ");
	scanf("%s",nam);
	system("cls");
	//STRUCTURE_COUNT
	for (i=0;(strcmp(nam,per[i].name)) != 1;i++){
		count++;
	}
	printf("\n%d\n",count);
		printf(red"\t\t\t\t --------------\n");
 		printf("\t\t\t\t|STUDENT STATUS|\n"); 
		printf("\t-------------------------------------------------------------\n");
		printf(green"\t|Name:%16s     |  Roll: %3d\t|  Department: %s  |\n",per[count].name,per[count].roll,per[count].depart);
		printf(red"\t-------------------------------------------------------------");
		printf(red"\n\n\t\t--------------------------------------");
		printf(reset"\n\t\t|  Subjects\t\t   |   Marks |");
		printf(red"\n\t\t--------------------------------------");
		printf(green"\n\t\t|  Physics \t");
		printf("\t   |  %d     |",per[count].marks[j]);
		printf(red"\n\t\t--------------------------------------");
		j++;
		printf(green"\n\t\t|  Applied Mechanics ");
		printf("\t   |  %d     |",per[count].marks[j]);
		printf(red"\n\t\t--------------------------------------");
		j++;
		printf(green"\n\t\t|  Drawing ");
		printf("\t\t   |  %d     |",per[count].marks[j]);
		printf(red"\n\t\t--------------------------------------");
		j++;
		printf(green"\n\t\t|  C Programming ");
		printf("\t   |  %d     |",per[count].marks[j]);
		printf(red"\n\t\t--------------------------------------");
		j++;
		printf(green"\n\t\t|  Mathematics ");
		printf("\t\t   |  %d     |",per[count].marks[j]);
		printf(red"\n\t\t--------------------------------------");
		j++;
		printf(green"\n\t\t|  Basic Electrical ");
		printf("\t   |  %d     |\n",per[count].marks[j]);
		printf(red"\t\t--------------------------------------\n\n");
		printf("\n\t\t---------------------------");
		printf("\n\t\t|  PERCENTAGE:    |  %.2f%     |\n",per[count].percent);
		printf("\t\t---------------------------\n");
		printf("\t\t|  DIVISION:      | %6s| ",per[count].div);
		printf("\n\t\t---------------------------\n");
}
void tabulate(struct person *per){
	system("cls");
	int j=0;
	printf("-----------------------------------------------------------------------------------------------------------------------\n");
	printf("|\tNAME\t\t| ROLL |\t\t\tMARKS\t\t\t\t    | PERCENTAGE |  DIVISION   |\n");
	printf("-----------------------------------------------------------------------------------------------------------------------\n");
	printf("\t\t\t       | PHYSICS | APPLIED | MATHS | C  | DRAWING | BASIC-ELECRICAL |\t\t\t      |\n");
	printf("-----------------------------------------------------------------------------------------------------------------------");
	for (int i=0;i<10;i++){
	printf("\n|%-23s|%6d|",per[i].name,per[i].roll);
	//DIDNT USE FOR  LOOP CAUSE SPACING WAS NOT RIGHT
	//for (int j=0;j<1;j++){
		printf("%8d | %7d | %5d | %3d| %7d | %15d |",per[i].marks[j],per[i].marks[j+1],per[i].marks[j+2],per[i].marks[j+3],per[i].marks[j+4],per[i].marks[j+5],per[i].marks[j+6]);
	//	}
	printf("%10.2f  | %s |",per[i].percent,per[i].div);
	printf("\n-----------------------------------------------------------------------------------------------------------------------");
	}
}
void del(struct person *per){
	char name[20];
	int i;
	printf("Enter the name of the person of which you want to detele record of:\n");
	scanf("%s",name);
	for (i=0;strcmp(name,per[i].name)!=1;i++){}//finds the structure position of destination record
	//operation to delete element of structure
	
	i=0;
}
